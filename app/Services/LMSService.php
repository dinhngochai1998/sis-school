<?php


namespace App\Services;


use Illuminate\Contracts\Pagination\LengthAwarePaginator;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use YaangVu\LaravelBase\Helpers\QueryHelper;
use YaangVu\LaravelBase\Services\impl\BaseService;
use YaangVu\SisModel\App\Models\impl\LmsSQL;
use YaangVu\SisModel\App\Models\impl\SchoolNoSQL;
use YaangVu\SisModel\App\Providers\SchoolServiceProvider;

class LMSService extends BaseService
{
    function createModel(): void
    {
        $this->model = new LmsSQL();
    }

    /**
     * @Author Edogawa Conan
     * @Date   Sep 10, 2021
     *
     * @param int|string $id
     *
     * @return Model|LmsSQL
     */
    public function get(int|string $id): Model|LmsSQL
    {
        return parent::get($id); // TODO: Change the autogenerated stub
    }

    public function getCoursesViaLmsId(int $lmsId): LengthAwarePaginator
    {
        return CourseService::queryGetViaLms($lmsId)->paginate(QueryHelper::limit());
    }

    /**
     * @param int $lmsId
     *
     * @return array|null
     */
    public function getZonesViaId(int $lmsId): ?array
    {
        $lms   = $this->get($lmsId);
        $zones = SchoolNoSQL::whereUuid(SchoolServiceProvider::$currentSchool->uuid)->pluck('zones')
                            ->toArray();
        $data  = [];
        if ($lms->uuid ?? null)
            foreach ($zones as $zone) {
                if (!is_array($zone))
                    continue;
                if (array_key_exists($lms->uuid, $zone))
                    $data = array_merge($data, $zone[$lms->uuid]);
            }

        return $data;
    }

    public static function getViaClassAssignmentId(int $classAssignmentId): Model|Builder|LmsSQL|null
    {
        return LmsSQL::query()
                     ->select('lms.*')
                     ->join('classes', 'lms.id', '=', 'classes.lms_id')
                     ->join('class_assignments', 'class_assignments.class_id', '=', 'classes.id')
                     ->where('class_assignments.id', $classAssignmentId)
                     ->first();
    }
}
